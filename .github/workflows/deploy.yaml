name: Build and Deploy

on:
 push:
   branches:
     - believeme

jobs:
 build:
   runs-on: ubuntu-latest

   steps:
   # 1. 리포지토리 체크아웃 
   - name: Checkout Repository
     uses: actions/checkout@v2
     with:
       fetch-depth: 0  # 전체 히스토리 가져오기

   # 2. Java & Maven 설치
   - name: Set up Java and Maven
     uses: actions/setup-java@v2
     with:
       java-version: '17'
       distribution: 'zulu'
       maven-version: '3.9.9'  # 로컬과 동일한 버전 사용
       cache: 'maven'

   # 3. Java & Maven 설치 확인
   - name: Verify Java and Maven installation
     run: |
       echo "Java version:"
       java -version
       echo "Maven version:"
       mvn -v

   # 4. Maven 빌드 실행
   - name: Build with Maven
     run: |
       echo "Checking for changes in source files..."
       if [ -z "${{ github.event.before }}" ]; then
         echo "First push or new branch, running mvn clean install."
         mvn clean install -DskipTests
       else
         if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q 'src'; then
           echo "Changes detected in source files, running mvn clean install."
           mvn clean install -DskipTests
         else
           echo "No source code changes, skipping build."
         fi
       fi

   # 5. WAR 파일 존재 확인
   - name: Verify WAR file
     run: |
       if [ -f "target/spring-0.0.1-SNAPSHOT.war" ]; then
         echo "WAR file successfully created"
         ls -l target/spring-0.0.1-SNAPSHOT.war
       else
         echo "WAR file not found!"
         echo "Contents of target directory:"
         ls -l target/
         exit 1
       fi

   # 6. deploy 브랜치 준비
   - name: Prepare deploy branch
     run: |
       git config --global user.name "pleasebelieveme"
       git config --global user.email "cain1227@naver.com"
       
       # WAR 파일 백업
       if [ -f "target/spring-0.0.1-SNAPSHOT.war" ]; then
         cp target/spring-0.0.1-SNAPSHOT.war /tmp/
       fi
       
       # deploy 브랜치로 전환
       if git show-ref --verify --quiet refs/remotes/origin/deploy; then
         git checkout deploy
       else
         git checkout --orphan deploy
         git rm -rf .
       fi
       
       # 백업한 WAR 파일 복원
       if [ -f "/tmp/spring-0.0.1-SNAPSHOT.war" ]; then
         cp /tmp/spring-0.0.1-SNAPSHOT.war .
       fi

   # 7. 변경사항 커밋 및 푸시
   - name: Commit and push if there are changes
     run: |
       git add spring-0.0.1-SNAPSHOT.war
       if [ -n "$(git status --porcelain)" ]; then
         echo "Changes detected, committing .war file."
         git commit -m "Deploy Spring Boot build files"
         git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/BranchLunchGach/TASTEGUDIE-BACK.git deploy --force
       else
         echo "No changes to commit"
       fi