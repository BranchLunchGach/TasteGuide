name: Build and Deploy

on:
  push:
    branches:
      - believeme  # 'believeme' 브랜치에 푸시할 때 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2. Java 설치 (Java 17, OpenJDK)
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # 필요한 Java 버전
          distribution: 'zulu'  # 지원되는 OpenJDK 배포판 중 하나

      # 3. Maven 설치 (필요한 Maven 버전)
      - name: Set up Maven
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'  # 동일한 배포판으로 설정
          maven-version: '3.8.1'  # 필요한 Maven 버전으로 수정

      # 4. Maven 빌드 실행 (변경된 파일만 빌드)
      - name: Build with Maven (if changes detected)
        run: |
          # 변경된 파일만 빌드
          if git diff --name-only $GITHUB_SHA^ $GITHUB_SHA | grep -q 'src'; then
            echo "Changes detected in source files, running mvn install."
            mvn install  # 변경된 파일이 src에 있을 때만 빌드
          else
            echo "No source code changes, skipping build."
          fi

      # 5. deploy 브랜치 체크아웃
      - name: Checkout deploy branch
        run: |
          # 사용자 정보 설정
          git config --global user.name "pleasebelieveme"  # 사용자 이름
          git config --global user.email "cain1227@naver.com"  # 사용자 이메일
          # 'deploy' 브랜치 체크아웃, 없으면 새로 생성
          git checkout deploy || git checkout --orphan deploy
          git rm -rf .  # deploy 브랜치의 기존 파일 삭제

      # 6. 빌드 파일 복사 (node_modules 제외)
      - name: Copy build files
        run: |
          # 빌드된 파일만 복사하고 node_modules는 제외
          cp -r target/* .  # target 폴더의 파일만 복사
          rm -rf target
          # .gitignore 파일을 확인하여 node_modules 폴더가 제외되도록 보장
          echo "node_modules/" >> .gitignore

      # 7. 변경 사항이 있는 경우에만 커밋 및 푸시
      - name: Commit and push if there are changes
        run: |
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Deploy Spring Boot build files"
            # GitHub Token을 사용하여 인증
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/BranchLunchGach/TASTEGUDIE-BACK.git deploy --force
          else
            echo "No changes to commit"
          fi
