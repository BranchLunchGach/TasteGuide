name: Build and Deploy Spring Boot

on:
  push:
    branches:
      - believeme  # 'believeme' 브랜치에 푸시할 때 트리거

permissions:
  contents: write  # 'contents' 권한을 'write'로 설정하여 푸시 권한 부여

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # 3. Maven 설치
      - name: Set up Maven
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          maven-version: '3.8.1'  # 필요한 Maven 버전으로 수정

      # 4. Maven 빌드
      - name: Build with Maven
        run: |
          mvn clean install -DskipTests

      # 5. deploy 브랜치 체크아웃
      - name: Checkout deploy branch
        run: |
          git config --global user.name "pleasebelieveme"  # 사용자 이름
          git config --global user.email "cain1227@naver.com"  # 사용자 이메일
          git checkout deploy || git checkout --orphan deploy  # 'deploy' 브랜치 체크아웃, 없으면 새로 생성
          git rm -rf .  # deploy 브랜치의 기존 파일 삭제

      # 6. 빌드된 파일 복사 (target 디렉토리의 JAR 파일을 복사)
      - name: Copy build files
        run: |
          cp target/*.jar .
          rm -rf target  # 빌드 후 생성된 target 디렉토리 삭제

      # 7. 변경 사항이 있을 경우 커밋 및 푸시
      - name: Commit and push if there are changes
        run: |
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Deploy Spring Boot build"
            # GitHub Token을 사용하여 인증 (https로 푸시)
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/BranchLunchGach/TASTEGUDIE-FRONT.git deploy --force
          else
            echo "No changes to commit"
          fi
